<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">

    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">  
	      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n</pattern>  
	    </layout>  
    </appender>

    <!-- 时间滚动输出 level为 DEBUG 日志 -->
    <appender name="file—debug"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>../logs/thrifttest-debug.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>../logs/thrifttest-debug.%d{yyyy-MM-dd}.log</FileNamePattern>
           <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80}:[%L] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 时间滚动输出 level为 DEBUG 日志 -->
    <appender name="file—info"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>../logs/thrifttest-info.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>../logs/thrifttest-info.%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80}:[%L] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="file—error"
               class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>../logs/thrifttest-error.log</file>
          <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
          </filter>
         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>../logs/thrifttest-error.%d{yyyy-MM-dd}.log</FileNamePattern>
             <!-- <MaxHistory>30</MaxHistory>-->
         </rollingPolicy>
         <encoder>
            <pattern>%date [%thread] %-5level %logger{80}:[%L] - %msg%n</pattern>
         </encoder>
    </appender>

    <!-- 时间滚动输出 listener 的日志 -->
    <appender name="file-listener"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>../logs/thrifttest-listener.log</file>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>message.contains("onMessageInternal")</expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>../logs/thrifttest-listener.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- <MaxHistory>30</MaxHistory>-->
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80}:[%L] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 异步debug输出 -->
    <appender name ="async-debug" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="file—debug"/>
        <includeCallerData>true</includeCallerData>
    </appender>
    <!-- 异步info输出 -->
    <appender name ="async-info" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="file—info"/>
        <includeCallerData>true</includeCallerData>
    </appender>
    <appender name ="async-error" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="file—error"/>
    </appender>
    <appender name ="async-listener" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>1024</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="file-listener"/>
    </appender>


    <root level="DEBUG">
        <appender-ref ref="async-error"/>
        <appender-ref ref="async-info"/>
        <appender-ref ref="async-debug"/>
        <appender-ref ref="async-listener"/>
    </root>

    <logger name="roman.easythrift.client" level="DEBUG"/>
    <logger name="org.mybatis.spring.SqlSessionUtils" level="DEBUG"/>
    <logger name="org.mybatis.spring.transaction" level="DEBUG"/>
    <logger name="org.springframework" level="DEBUG"/>
</configuration>